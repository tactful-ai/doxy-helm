  # This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
name: verify & Upload Python Package

on:
  push:
    branches:
      - release

permissions:
  contents: write

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: pip install --upgrade pip && pip install -r requirements.txt

    - name: Cache dependencies
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: run unit-tests
      run: |
        python -m unittest discover -s ./tests/unit-test/

    - name: run test the full functionality of the tool
      run: |
        python -m unittest discover -s ./tests/end-test/ 

  push-docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # First auth
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Then push
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: tactfulai/helm2readme:latest

  publish-package:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Install setuptools and wheel
        run: pip install --upgrade setuptools wheel

      - name: Build and Publish
        run: |
          pip install twine
          python setup.py sdist bdist_wheel
          twine upload --verbose -u __token__ -p ${{ secrets.PYPI_TOKEN }} dist/*

  build_binary:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["windows-latest", "ubuntu-latest", "macos-latest"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: setup pyinstaller
        run: pip install pyinstaller
      - name: build the tool
        run: |
          python setup.py install
          python setup.py build
      - name: build the binary using pyinstaller
        run: |
          pip uninstall -y typing
          pyinstaller --onefile main.py --name helm2readme

      - name: create a tag for the release
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/v-${{ matrix.os }}-${{ github.sha }}',
              sha: context.sha
            })
      - name: publish the binary in a release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/helm2readme.exe
            dist/helm2readme
          name: "Release ${{ github.run_number  }} ${{ matrix.os }}"
          tag_name: v-${{ matrix.os }}-${{ github.sha }}     
          target_commitish: release
